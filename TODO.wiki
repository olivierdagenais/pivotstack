# Create SDK in three parts:
## SoftwareNinjas.Pivot
### @DeepZoomImage@
### @MortonLayout@
### @BitmapSourceExtensions@
### @FrameworkElementExtensions@
### Investigate @PivotSerializer@ that converts decorated POCO into XML
## SoftwareNinjas.Pivot.Framework (attributes and interfaces)
### @ItemIdAttribute@
#### string Format {get; set;} (optional)
### @ItemHrefAttribute@
#### string Format {get; set;} (optional)
### @ItemNameAttribute@
#### string Format {get; set;} (optional)
### @ItemDescriptionAttribute@
#### string Format {get; set;} (optional)
### @FacetCategoryAttribute@ (assumes POCO's types are appropriate - what happens if a property is to be rendered in more than one FacetCategory?)
#### string Name {get; set;} (initialized from property name, but can be overridden)
#### FacetType Type {get; set;} (initialized from property type, but could be overridden)
#### string Format {get; set;} (optional)
#### bool IsFilterVisible {get; set;}
#### bool IsMetaDataVisible {get; set;}
#### bool IsWordWheelVisible {get; set;}
### Implement interface that:
#### emits a sequence of collections
#### emits a sequence of the entity class for each collection
## Project - settings, template & user assembly
# MapReduce (Qizmt?)
## Can "map" posts to:
### @{post_id}_filtered.xml@
### @{post_id}_longtext.xml@
### @{post_id}.png@
## Can "map" tags to:
### @{tag}.cxml@
### @{tag}.dzi@ (image collection index)
### @{tag}_images/@ (collection images)
## Does it make sense to "reduce" the aggregation of individual posts into a tag collection?
# Hyperlink users (Asker, TopAnswerAuthor, AcceptedAnswerAuthor), but first we'll need UserId(s)
# Hyperlink answers (TopAnswer, AcceptedAnswer)
# Provide stats on comments (# for question itself, # top answer, # accepted answer, # total for all answers & question)
# Implement a suitable binning mechanism for tags (i.e. @tips-and-tricks.cxml@ as @t/tips-and-tricks.cxml@)
## There are 4863 tags for SuperUser July 2010
## There are 5200 tags for SuperUser August 2010
## There are 29000 tags for StackOverflow August 2010
# Create initial collection representing tags as items that link to @&lt;tag&gt;.cxml@
## there's "About", "FAQ", stats, hot, new, synonyms
# Create collection of users???
## SuperUser has > 36 000 users as of 2010/09/25
## StackOverflow has > 242 000 users as of 2010/09/25
# Break up tag collections into first (fast) part w/all metadata and small data and second (supplement) with long text of questions &amp; answers (anything not filtered?)
# Create webserver version (IIS Express?) that can run off of the data dump 7-zip archive (some pre-processing/indexing is expected)
## More generally, a _portable version of Pivot_ could be generated such that the EXE is a webserver that launches a web browser to itself, where it will serve up the PivotViewer Silverlight control and the collection files contained inside the assembly's resources. Great for demos on a DVD/memory stick w/o installing or an internet connection.  Would need portable of everything: .NET, Silverlight, browser (Pivot_JIT_Sample ???)
# Extract classes for tidy O.O. model
# Render posts as HTML inside XAML
# Extract [external] links from post body to be made available in info panel, converting them back into references
# Render posts with metadata, such as favorite count, accepted, # views
# Create image collections (.dzc)
# Split item XML based on facet category type/usage
# Generate individual item XML from posts
# Generate item image slice manifest (.dzi)
# Assemble collection XML from individual item XML files into template (i.e. reduce!)